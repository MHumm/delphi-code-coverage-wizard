unit Test_uProjectSettings;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, Classes, Generics.Collections, SysUtils, uProjectSettings;

type
  // Test methods for class TProgramSourceFiles

  TestTProgramSourceFiles = class(TTestCase)
  strict private
    FProgramSourceFiles: TProgramSourceFiles;
    FTmpList : TStringList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAddFile;
    procedure TestGetCheckedItemsList;
  end;
  // Test methods for class TProgramSourceFileItem

  TestTProgramSourceFileItem = class(TTestCase)
  strict private
    FProgramSourceFileItem: TProgramSourceFileItem;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    Procedure TestConstructor;
  end;

implementation

procedure TestTProgramSourceFiles.SetUp;
begin
  FProgramSourceFiles := TProgramSourceFiles.Create;
  FTmpList := TStringList.Create;
end;

procedure TestTProgramSourceFiles.TearDown;
begin
  FProgramSourceFiles.Free;
  FProgramSourceFiles := nil;
  FreeAndNil(FTmpList);
end;

procedure TestTProgramSourceFiles.TestAddFile;
begin
  FProgramSourceFiles.BasePath := 'C:\Dummy\';
  // TODO: Setup method call parameters
  FProgramSourceFiles.AddFile('C:\Dummy\MyFile1.pas');
  FProgramSourceFiles.AddFile('C:\Dummy\DummyFolder\MyFile2.pas');
  // TODO: Validate method results

  FProgramSourceFiles.GetCheckedItemsList(FTmpList);
  CheckEquals(2, FTmpList.Count);
  CheckEquals('MyFile1.pas', FTmpList[0]);
  CheckEquals('DummyFolder\MyFile2.pas', FTmpList[1]);
end;

procedure TestTProgramSourceFiles.TestGetCheckedItemsList;
begin
  // TODO: Setup method call parameters
  FProgramSourceFiles.GetCheckedItemsList(FTmpList);
  // TODO: Validate method results
  CheckEquals(0, FTmpList.Count);
end;

procedure TestTProgramSourceFileItem.SetUp;
begin
  FProgramSourceFileItem := TProgramSourceFileItem.Create('C:\MyFolder\MyFile.pas');
end;

procedure TestTProgramSourceFileItem.TearDown;
begin
  FProgramSourceFileItem.Free;
  FProgramSourceFileItem := nil;
end;

procedure TestTProgramSourceFileItem.TestConstructor;
begin
  CheckEquals('C:\MyFolder\MyFile.pas', FProgramSourceFileItem.Filename);
  CheckEquals(True, FProgramSourceFileItem.Selected);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTProgramSourceFiles.Suite);
end.

